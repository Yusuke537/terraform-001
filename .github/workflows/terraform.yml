# .github/workflows/hello-world.yml
#The name of the workflow, will be displayed on the Github actions page
name: Terraform
# when to execute it, similar to Azure DevOps trigger keyword 
on: #[push, pull_request]
  push:
    branches:
      - feature
  pull_request:
    branches: 
      - master

# list of jobs to execute
jobs:
  terraform:
    name: Terraform
    env:
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
      SOURCE_DIR: ${{ github.workspace }}/src/infra/

    # which OS to use when running this action
    runs-on: ubuntu-latest
    steps:
    - name: Test
      run: |
        echo ${{ github.ref }}  ${{ github.event.pull_request.merged }}  ${{ github.event.pull_request.closed }}

    #- name: SourceProd
    #  if: github.ref == 'refs/heads/master'
      #env:
      #  SOURCE_DIR: ${{ github.workspace }}/src/infra/prod

    - name: SourceDev
      if: github.ref == 'refs/heads/dev'
      env:
        SUBDIR: SOURCE_DIR dev
      run: echo 1

    - name: SourceTest
      if: github.ref == 'refs/heads/feature'
      env:
        SUBDIR: SOURCE_DIR test
      run: echo "$SUBDIR"

    - name: Checkout
      uses: actions/checkout@v2

    - name: HashiCorp - Setup Terraform
      uses: hashicorp/setup-terraform@v1.1.0

    - name: Terraform Init
      id: init
      run: terraform init $SOURCE_DIR

    - name: Terraform Validate
      id: validate
      run: terraform validate $SOURCE_DIR -no-color

    #- name: Terraform Plan
    #  id: plan
    #  if: github.event_name == 'pull_request'
    #  run: terraform plan $SOURCE_DIR -no-color

    #- name: Terraform Apply
    #  #if: github.ref == 'refs/heads/master' && github.event_name == 'push'
    #  if: github.ref == 'refs/heads/master' && github.event.pull_request.merged == true
    #  #if: github.ref == 'refs/pull/13/merge' && github.event.pull_request.base.ref == 'master'
    #  run: terraform apply -auto-approve $SOURCE_DIR